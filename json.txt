1) Создать внешний репозиторий c названием JSON.
github => repositories => new => repository name => JSON

2) Клонировать репозиторий JSON на локальный компьютер.
mkdir git_json => cd git_json => git clone https://github.com/ivanshybut/JSON.git

3) Внутри локального JSON создать файл “new.json”.
cd json => touch new.json


4) Добавить файл под гит.
git status => git add . => git status(все файлы) git add new.json => git status( определенный файл) 

5) Закоммитить файл.
git commit -m "create json files"


6) Отправить файл на внешний GitHub репозиторий.
git push


7) Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.

vim new.json => i => {
	"first_name": "Ivan",
	"last_name": "Shybut",
	"age": "29",
	"pets": "non",
	"profession": "QA_engineer" 
	"salary": ["5500 in month"]
}
=> esc => :wq

8) Отправить изменения на внешний репозиторий.
git status => git add . => git status => git commit -m "about me" => git push
для отправки файла с изменением и коммитом git commit -am "about me" => git push


9) Создать файл preferences.json
touch preferences.json

10) В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
vim preferences.json => i => {
	"favoritMovie": "Interstellar",
	"favotineTWshow": "The Big Bang Theory",
	"favoriteFood": "Steak",
	"favoriteSeason": "Winter snowfall",
	"countryYouWouldLikeToVisit": "Japan"
}

esc => wq =>


11) Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
touch sklls.json => vim sklls.json => i => 
 {
	"theSkils": [
		"Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC ,Что такое клиент серверная архитектура",
		"Методы запросов на сервер",
		"Ответы сервера",
		"Структуры запросов и ответов",
		"Что такое JSON, XML. Их структура",
		"Тестирование API",
		"Снятие и чтение логов",
		"Postman, Fidler",
		"VPN. (Как работает, зачем нужен, как использовать, варианты инструментов)",
		"Dev Tools веб браузеров (Google Chrome, FireFox)",
		"Мобильное тестирование",
		"Особенность iOS, Android, гайдлайны",
		"Сборка iOS приложений на XCode",
		"Сборка Android приложений на Android Studio",
		"Перехват мобильного трафика (сниффинг) через Charles",
		"Настройка прокси на iOS и Android",
		"Командная строка (terminal) Linux Ubuntu. Копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса",
		"Простой bash скриптринг , автоматизация рутинных задач на сервере",
		"Доступ к удалённым серверам",
		"Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join",
		"Git",
		"Jmeter",
		"Методология разработки Scrum",
		"Python. Создание собственного клиент-серверного приложения"
	]
}
esc => :wq => git status => git add . => git status => git commit -m "preferences and skils" => git push

12) Отправить сразу 2 файла на внешний репозиторий.
git status => git add . => git status => git commit -m "preferences and skills" => git push

13) На веб интерфейсе создать файл bug_report.json.
create new file
14) Сделать Commit changes (сохранить) изменения на веб интерфейсе.
15) На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
16) Сделать Commit changes (сохранить) изменения на веб интерфейсе.
17) Синхронизировать внешний и локальный репозиторий JSON